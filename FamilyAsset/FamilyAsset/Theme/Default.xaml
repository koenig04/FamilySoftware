<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--默认的中文Label样式-->
    <Style TargetType="{x:Type Label}" x:Key="LabelStyleBaseChs">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--默认的中文Button样式-->
    <Style TargetType="{x:Type Button}" x:Key="ButtonStyleBaseChs">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--默认的中文TextBlock样式-->
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyleBaseChs">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--默认的中文TextBox样式-->
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyleBaseChs">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!--默认的中文ToggleButton样式-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyleBaseChs">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="IsThreeState" Value="False"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="PageTitle" BasedOn="{StaticResource TextBlockStyleBaseChs}">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="微软幼圆"/>
        <Setter Property="FontWeight" Value="ExtraBold"/>
        <Setter Property="Foreground" Value="BurlyWood"/>
    </Style>
    
    <!--主界面上左侧栏按钮样式-->
    <Style TargetType="Button" x:Key="HomePageButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="#459600" BorderThickness="1" Background="Firebrick" CornerRadius="10" >
                        <TextBlock Text="{TemplateBinding Content}" FontSize="20" FontFamily="微软雅黑" FontWeight="ExtraBold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主界面上左侧栏按钮样式-->
    <Style TargetType="Button" x:Key="HomePageGreenButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="#459600" BorderThickness="1" Background="LimeGreen" CornerRadius="10" >
                        <TextBlock Text="{TemplateBinding Content}" FontSize="20" FontFamily="微软雅黑" FontWeight="ExtraBold" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主界面左侧Label样式基类-->
    <Style TargetType="{x:Type Label}" x:Key="HomePageLabelBase">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--主界面上左侧栏标题样式-->
    <Style TargetType="{x:Type Label}" x:Key="HomePageTitle" BasedOn="{StaticResource HomePageLabelBase}">
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <!--系统设置界面的ListBox样式-->
    <Style TargetType="{x:Type ListBox}" x:Key="SysConfigListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="DeepSkyBlue" BorderThickness="1" CornerRadius="10">
                        <ListBox>
                            <ItemsControl ItemsSource="{TemplateBinding ItemsSource}"/>
                        </ListBox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Width="100" Height="50">
                        <Image Width="50" Height="50" Source="{Binding ItemImg}" />
                        <TextBlock Width="50" Height="50" Text="{Binding ItemName}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <!--系统设置的标题样式基类-->
    <Style TargetType="{x:Type Label}" x:Key="SysConfigLabel">
        <Setter Property="FontFamily" Value="微软雅黑"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--ItemConfig的标题样式-->
    <Style TargetType="{x:Type Label}" x:Key="ItemConfigLabel" BasedOn="{StaticResource SysConfigLabel}">
        <Setter Property="Foreground" Value="DeepSkyBlue"/>
    </Style>

    <!--年月日的左圆ToggleButton-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="LeftRoundToggelButtonYMD">
        <Border CornerRadius="5,0,0,5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2,2,0,2" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!--年toggleButton-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="YearToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource LeftRoundToggelButtonYMD}"/>
        <Setter Property="Content" Value="年"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Foreground" Value="MidnightBlue"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="MidnightBlue"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="MidnightBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="MidnightBlue"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--年月日的全方ToggleButton-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="AllRechToggelButtonYMD">
        <Border CornerRadius="0,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!--月toggleButton-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="MonthToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource AllRechToggelButtonYMD}"/>
        <Setter Property="Content" Value="月"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Foreground" Value="MidnightBlue"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="MidnightBlue"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="MidnightBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="MidnightBlue"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--年月日的右圆ToggleButton-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="RightRoundToggelButtonYMD">
        <Border CornerRadius="0,5,5,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,2,2,2" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!--日toggleButton-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="DayToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource RightRoundToggelButtonYMD}"/>
        <Setter Property="Content" Value="日"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Foreground" Value="MidnightBlue"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="MidnightBlue"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="MidnightBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="MidnightBlue"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="AllRoundToggelButton">
        <Border CornerRadius="5,5,5,5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type ToggleButton}" x:Key="StatisticItemToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource AllRoundToggelButton}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Background" Value="DimGray"/>
        <Setter Property="Content" Value="{Binding ItemContent}"/>
        <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
    </Style>

    <!--左圆ToggleButton-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="LeftRoundToggelButton">
        <Border CornerRadius="10,0,0,10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2,2,1,2" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!--右圆ToggleButton-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="RightRoundToggelButton">
        <Border CornerRadius="0,10,10,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,2,2,2" Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <!--ItemConfig上的IncomeToggleButton样式-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="OutcomeToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource RightRoundToggelButton}"/>
        <Setter Property="Content" Value="支出"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="Firebrick"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="Firebrick"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Firebrick"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ItemConfig上的OutcomeToggleButton样式-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="IncomeToggleButton" BasedOn="{StaticResource ToggleButtonStyleBaseChs}">
        <Setter Property="Template" Value="{StaticResource LeftRoundToggelButton}"/>
        <Setter Property="Content" Value="收入"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="LimeGreen"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="LimeGreen"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.Setters>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="LimeGreen"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="PopWindowItemTitle" BasedOn="{StaticResource LabelStyleBaseChs}">
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="PopWindowItemContent" BasedOn="{StaticResource LabelStyleBaseChs}">
        <Setter Property="FontWeight" Value="Normal"/>
        <!--<Setter Property="FontWeight" Value="Normal"/>-->
    </Style>
</ResourceDictionary>